{"version":3,"file":"04bc7533b8d44cbf2bd4.js","sources":["webpack:///./mixins/upload.js"],"sourcesContent":["import { getUpToken } from '~/api/imageApi'\n\nexport default {\n  data() {\n    return {\n      uploadHeaders: {\n        key: '',\n        token: ''\n      },\n      uploadConfig: {\n        max: 5\n      },\n      uploadImageLimit: 20,\n      imageUploadAccept: [\n        'image/jpeg',\n        'image/png',\n        'image/jpg'\n      ].join(', '),\n      imageUploadAction: 'https://upload.qiniup.com',\n      imagePrefix: 'https://m1.calibur.tv/',\n      getUpTokenTimer: 0,\n      uploadPending: 0,\n      uploadImageTotal: 0,\n      uploadImageList: []\n    }\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.user\n    },\n    isAuth() {\n      return this.$store.state.isAuth\n    }\n  },\n  mounted() {\n    if (this.isAuth) {\n      this.initUpToken()\n    } else {\n      this.$channel.$when('user-signed', () => {\n        this.initUpToken()\n      })\n    }\n  },\n  beforeDestroy() {\n    this.getUpTokenTimer && clearInterval(this.getUpTokenTimer)\n  },\n  methods: {\n    initUpToken() {\n      this.getUpToken()\n      this.getUpTokenTimer = setInterval(() => {\n        this.getUpToken()\n      }, 1000 * 60 * 30)\n    },\n    async getUpToken() {\n      let token = this.$cookie.get('UPLOAD-TOKEN')\n      if (token) {\n        this.uploadHeaders.token = this.$cookie.get('UPLOAD-TOKEN')\n        return\n      }\n      token = await getUpToken(this)\n      this.uploadHeaders.token = token\n      this.$cookie.set('UPLOAD-TOKEN', token, {\n        expires: new Date(new Date().getTime() + 3000000)\n      })\n    },\n    handleImageUploadError(err, file) {\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadPending--\n          this.uploadImageList.splice(index, 1)\n          console.log(err) // eslint-disable-line\n        }\n      })\n      this.$toast.error(`图片：${file.name} 上传失败`)\n    },\n    handleImageUploadRemove(file) {\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadImageList.splice(index, 1)\n          this.uploadImageTotal--\n        }\n      })\n    },\n    handleImageUploadSuccess(res, file) {\n      this.uploadImageList.forEach((item, index) => {\n        if (item.uid === file.uid) {\n          this.uploadImageList[index] = Object.assign(item, {\n            data: res.data,\n            status: 'success',\n            url: this.$resize(`${this.imagePrefix}${res.data.url}`, {\n              width: 100\n            })\n          })\n        }\n      })\n      this.uploadImageTotal++\n      this.uploadPending--\n    },\n    handleImageUploadExceed() {\n      this.$toast.info(`最多还能上传${this.uploadImageLimit - this.uploadImageTotal}张图片`)\n    },\n    handleImageUploadBefore(file) {\n      if (!this.isAuth) {\n        this.$channel.$emit('sign-in')\n        return false\n      }\n\n      if (!this.imageUploadAccept.split(', ').includes(file.type)) {\n        this.$toast.error(\n          `仅支持上传${this.imageUploadAccept\n            .replace(/image\\//g, '')\n            .replace(/, /g, '、')}格式的图片`\n        )\n        return false\n      }\n      if (this.uploadConfig.max && this.uploadConfig.max < file.size / 1024 / 1024) {\n        this.$toast.error(`图片大小不能超过 ${this.uploadConfig.max}MB!`)\n        return false\n      }\n\n      const createFileName = ({ slug, file }) => {\n        return `${slug}/${new Date().getTime()}-${Math.random()\n          .toString(36)\n          .substring(3, 6)}.${file.type.split('/').pop()}`\n      }\n\n      this.uploadHeaders.key = createFileName({\n        slug: this.currentUser.slug,\n        file\n      })\n\n      this.uploadImageList.push({\n        name: file.name,\n        percentage: 0,\n        raw: file,\n        size: file.size,\n        status: 'uploading',\n        errMsg: '',\n        uid: file.uid\n      })\n      this.uploadPending++\n\n      return true\n    },\n    resetUploaderStatus() {\n      this.uploadImageList = []\n      this.uploadImageTotal = 0\n      this.uploadPending = 0\n    }\n  }\n}\n"],"mappings":";AAAA","sourceRoot":""}